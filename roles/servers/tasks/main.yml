- name: Populate service facts
  ansible.builtin.service_facts:

- name: Include tasks specific to a host group
  loop: "{{ group_names }}"
  loop_control:
    loop_var: group_name
  when: lookup('ansible.builtin.first_found', group_name + '.yml')
  ansible.builtin.include_tasks: "{{ group_name }}.yml"

- name: Remove skeleton files
  loop:
    - .bash_logout
    - .bashrc
    - .profile
  loop_control:
    loop_var: skeleton_file
  ansible.builtin.include_tasks: skeleton_file.yml

- name: Admin groups
  loop: "{{ query('community.general.flattened', servers_admin_groups) | unique }}"
  loop_control:
    loop_var: admin_group
  ansible.builtin.include_tasks: admin_group.yml

- name: Global default configs
  ansible.builtin.import_tasks: configs.yml

- name: Configure avahi-daemon
  notify: restart
  ansible.builtin.copy:
    src: avahi-daemon.conf
    dest: /etc/avahi/
    mode: '0644'

- name: NetworkManager
  ansible.builtin.import_tasks: network-manager.yml

- name: Firewall
  block:
    - name: Enable firewalld
      ansible.builtin.service:
        name: firewalld.service
        state: started
        enabled: true

    - name: Firewall zones
      loop: "{{ query('community.general.flattened', servers_firewall_zone_configs) | unique }}"
      loop_control:
        loop_var: firewalld_zone
        label: "{{ firewalld_zone.name | mandatory('firewall_zone_configs entries require a name key') }}"
      ansible.builtin.include_tasks: firewalld_zone.yml

    - name: Disable ufw
      when: ansible_facts.services['ufw.service']
      ansible.builtin.service:
        name: ufw.service
        state: stopped
        enabled: false

- name: Configure snap
  when: server_snap_enabled
  block:
    - name: Enable snapd
      ansible.builtin.service:
        name: snapd
        state: started
        enabled: true

    - name: Install snaps
      loop: "{{ query('community.general.flattened', servers_snaps) | unique }}"
      loop_control:
        loop_var: snap
      ansible.builtin.include_tasks: snap.yml
