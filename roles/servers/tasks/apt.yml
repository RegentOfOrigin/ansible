- name: apt | Set package_architecture fact
  ansible.builtin.set_fact:
    cacheable: true
    package_architecture: "{{ lookup('ansible.builtin.pipe', 'dpkg --print-architecture') }}"

- name: apt | Get repository key
  loop: "{{ query('community.general.flattened', server_apt_repos) | unique }}"
  loop_control:
    loop_var: repository
    label: "{{ repository.name | mandatory(msg='server_apt_repos entries must have a name key') }}"
  ansible.builtin.get_url:
    url: "{{ repository.key.url | mandatory(msg='key entries must have a url key') }}"
    dest: "/etc/apt/keyrings/{{ repository.name }}.{{ repository.key.type }}"
    mode: '0644'
  when: repository.key

- name: apt | Add repository
  loop: "{{ query('community.general.flattened', server_apt_repos) | unique }}"
  loop_control:
    loop_var: repository
    label: "{{ repository.name | mandatory(msg='server_apt_repos entries must have a name key') }}"
  vars:
    repo_content:
      Types: "{{ repository.types | list | join(' ') or mandatory(msg='server_apt_repos entries must have a types key') }}"
      URIs: "{{ repository.uris | mandatory(msg='server_apt_repos entries must have a uris key') }}"
      Suites: "{{ repository.suites | default(distribution_release) | list | join(' ') }}"
      Components: "{{ repository.components | mandatory(msg='server_apt_repos entries must have a components key') | join(' ') }}"
      Signed-By: "/usr/share/keyrings/{{ repository.name }}.{{ repository.key.type | default(omit) }}"
      Architectures: "{{ repository.architectures | default(ansible_facts.package_architecture) }}"
  ansible.builtin.copy:
    dest: "/etc/apt/sources.d/{{ repository.name }}"
    content: "{{ repo_content | to_yaml }}"
    mode: '0644'

- name: apt | Set preferences
  loop: "{{ query('community.general.flattened', servers_apt_preferences) | unique }}"
  loop_control:
    loop_var: preference
    label: "{{ preference.name | mandatory(msg='servers_apt_preferences entries must have a name key') }}"
  vars:
    content:
      Package: "{{ preference.package | mandatory(msg='servers_apt_preferences entries must have a package key') }}"
      Pin: "{{ preference.pin | mandatory(msg='servers_apt_preferences entries must have a pin key') }}"
      Pin-Priority: "{{ preference.priority | mandatory(msg='servers_apt_preferences entries must have a priority key') }}"
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/{{ preference.name }}"
    content: "{{ repo_content | to_yaml }}"
    mode: '0644'

- name: apt | Update cache
  ansible.builtin.apt:
    update: true

- name: apt | Install packages
  ansible.builtin.apt:
    install_recommends: true
    cache_valid_time: 3600
    name: "{{ lookup('community.general.flattened', servers_packages) + (server_snap_enabled | ternary(['snapd'], [])) | unique }}"

- name: apt | Cleanup
  when: lookup('ansible.builtin.pipe', 'apt-mark minimize-manual')
  ansible.builtin.apt:
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
    purge: true
