- name: firewalld_zone | Ensure zone exists
  ansible.posix.firewalld:
    permanent: true
    immediate: true
    zone: "{{ firewalld_zone.zone | mandatory(msg='servers_firewall_zone_configs must have a zone key') }}"
    state: present

- name: firewalld_zone | Add service(s)
  loop: "{{ firewalld_zone.services | default([]) }}"
  loop_control:
    loop_var: firewall_service
  when: firewalld_zone.target
  ansible.posix.firewalld:
    permanent: true
    immediate: true
    zone: "{{ firewalld_zone.zone }}"
    target: "{{ firewall_service }}"
    state: present

- name: firewalld_zone | Set target
  when: firewalld_zone.target
  ansible.posix.firewalld:
    permanent: true
    immediate: true
    zone: "{{ firewalld_zone.zone }}"
    target: "{{ firewalld_zone.target }}"
    state: present

- name: firewalld_zone | Add interface(s)
  loop: "{{ firewalld_zone.interfaces | default([]) }}"
  loop_control:
    loop_var: firewall_interface
  when: firewalld_zone.interfaces
  ansible.posix.firewalld:
    permanent: true
    immediate: true
    zone: "{{ firewalld_zone.zone }}"
    interface: "{{ firewall_interface }}"
    state: enabled

- name: firewalld_zone | Add CIDR(s)
  loop: "{{ firewalld_zone.sources | default([]) }}"
  loop_control:
    loop_var: firewall_source
  when: firewalld_zone.sources
  ansible.posix.firewalld:
    permanent: true
    immediate: true
    zone: "{{ firewalld_zone.zone }}"
    source: "{{ firewall_source }}"
    state: enabled

- name: firewalld_zone | Set as default
  when:
    - firewalld_zone.default
    - lookup('ansible.builtin.pipe', 'firewall-cmd --get-default-zone') != firewalld_zone.default
    - lookup('ansible.builtin.pipe', 'firewall-cmd --set-default-zone=' + firewalld_zone.zone)
  ansible.utils.update_fact:
    updates:
      - path: firewalld.default_zone
        value: firewalld_zone.zone
